Theory:

1. Abstract class, Interface
	abstract method

  Comparable, Comparator what is the difference?

  ArrayList
	 methods https://docs.oracle.com/javase/7/docs/api/java/util/ArrayList.html
	 structure http://habrahabr.ru/post/128269/

  Use ArrayList instead array!

  read OOP sections in Java Head First

2. final word in java - define problem and goals
      try to undestand "Immutability" principle

      Do your class String(prev homework) - Immutable!!!

3. Read about String, StringBuilder, StringBuffer.
    Strong and weak sides of each class.

4.  Read about SOLID principles!!!!

5. Strategy, Template Method, Singleton - design patterns
	book Head First Design Patterns

Practice:

    Before implement all classes, draw class diagram
    For  more comfortable structure override toString and equals
    use ArrayList

1.  Write own sorting algorithms
	bubble, selection, insetion
	http://visualgo.net/sorting.html

	use TimeCounter for comparing each algorithms by work time

2. Finish your own ArrayList


3. Начинаем делать ваш выпускной проект.
   В этой домашке сделаем его базовую структуру, а именно модель и контроллер, у кого будет время и желание
   могут начать делать консольную визульную часть проэкта. (Прочитайте про MVC model). До завершения курса оформим
   красивый графический интерфейс. Постепенно проходя новые темы будем улучшать ваш проект.

   Лучшая структура будет использованна вдальнейшем для доработки всей группой, будем внедрять командную работу.
   Проект сможете легко включить в свое резюме.

   Название пока есть рабочее("Что в прокате?"), принимаются ваши предложения на названия для продакшина.

    Представте, что вы сидите дома и устали от написания кода, хотите сходить в кино,
    но даже не знаете, что сейчас на экранах... Это не беда, ведь у Вас есть "Что в прокате?".

    Запустив программу, вы можете:
     1. Просмотреть список всех фильмов, который показывают сейчас в вашем городе;
     2. Просмотреть список фильмов конкретного кинотеатра;
     3. Найти фильм по названию(если не находит то попробовать найти схожие слова);
     4. Выбрать фильмы по жанрам;
     5. Выбрать фильмы по времени показу;
     6. Просмотреть детально цену, описание и прочую инфу конкретного фильма кинотеатра;
     7. Просмотреть описание фильмов, всей базы (не дублируя фильмы);
     8. Использовать разные сортировки вывода фильмов;
     ... в будущем можно добавить геолокацию и узнать сколько времени у вас займет добраться до конкретного кинотеатра и прочие фитчи

     Со стороны серверной части нам нужно будет уметь:
     1. Добавить кинотеатр в нашу программу;
     2. Добавить фильм в нашу программу;
     3. Привязать фильм к конкретному кинотеатру;
     4. Удалить фильмы которые уже не в прокате(автоматически);
     5. Удалить кинотеатры, которые перестали работать;
     6. Редактировать данные по кинотеатру;
     7. Редактировать фильмы;
     ... не стесняемся вносить свои предложения.

     Как вы поняли нужно по полной будет использовать абстрактные классы и интерфейсы.

     Структуру проекта можете обсуждать в группе, провести swot анализ)))

     Жду всех в среду в 19.30 с вашими идеями и первыми наработками.

     Всем продуктивной недели!!!!
     Я в вас верю!
